{"ast":null,"code":"import { ChartType } from '../lbd/lbd-chart/lbd-chart.component';\nimport * as Chartist from 'chartist';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../lbd/lbd-chart/lbd-chart.component\";\nexport let ChartsComponent = /*#__PURE__*/(() => {\n  class ChartsComponent {\n    dataChartType;\n    dataChartData;\n    dataChartOptions;\n    data2ChartType;\n    data2ChartData;\n    data2ChartOptions;\n    emailChartType;\n    emailChartData;\n    emailChartLegendItems;\n    hoursChartType;\n    hoursChartData;\n    hoursChartOptions;\n    hoursChartResponsive;\n    hoursChartLegendItems;\n    viewsChartType;\n    viewsChartData;\n    viewsChartOptions;\n    viewsChartResponsive;\n    activityChartType;\n    activityChartData;\n    activityChartOptions;\n    activityChartResponsive;\n    ngOnInit() {\n      this.emailChartType = ChartType.Pie;\n      this.emailChartData = {\n        labels: ['62%', '32%', '6%'],\n        series: [62, 32, 6]\n      };\n      this.emailChartLegendItems = [{\n        title: 'Apple',\n        imageClass: 'fa fa-circle text-info'\n      }, {\n        title: 'Samsung',\n        imageClass: 'fa fa-circle text-danger'\n      }, {\n        title: 'Windows Phone',\n        imageClass: 'fa fa-circle text-warning'\n      }];\n      this.dataChartType = ChartType.Line;\n      this.dataChartData = {\n        labels: ['6pm', '9pm', '11pm', '2am', '4am', '8am', '2pm', '5pm', '8pm', '11pm', '4am'],\n        series: [[1, 6, 8, 7, 4, 7, 8, 12, 16, 17, 14, 13]]\n      };\n      this.dataChartOptions = {\n        showPoint: false,\n        lineSmooth: true,\n        height: \"260px\",\n        axisX: {\n          showGrid: false,\n          showLabel: true\n        },\n        axisY: {\n          offset: 40\n        },\n        low: 0,\n        high: 16\n      };\n      this.data2ChartType = ChartType.Line;\n      this.data2ChartData = {\n        labels: ['\\'07', '\\'08', '\\'09', '\\'10', '\\'11', '\\'12', '\\'13', '\\'14', '\\'15'],\n        series: [[22.20, 34.90, 42.28, 51.93, 62.21, 80.23, 62.21, 82.12, 102.50, 107.23]]\n      };\n      this.data2ChartOptions = {\n        lineSmooth: false,\n        height: \"260px\",\n        axisY: {\n          offset: 40,\n          labelInterpolationFnc: function (value) {\n            return '$' + value;\n          }\n        },\n        low: 10,\n        high: 110,\n        classNames: {\n          point: 'ct-point ct-green',\n          line: 'ct-line ct-green'\n        }\n      };\n      this.hoursChartType = ChartType.Line;\n      this.hoursChartData = {\n        labels: ['\\'06', '\\'07', '\\'08', '\\'09', '\\'10', '\\'11', '\\'12', '\\'13', '\\'14', '\\'15'],\n        series: [[287, 385, 490, 554, 586, 698, 695, 752, 788, 846, 944], [67, 152, 143, 287, 335, 435, 437, 539, 542, 544, 647], [23, 113, 67, 190, 239, 307, 308, 439, 410, 410, 509]]\n      };\n      this.hoursChartOptions = {\n        low: 0,\n        high: 1000,\n        showArea: false,\n        height: '245px',\n        axisX: {\n          showGrid: true\n        },\n        lineSmooth: Chartist.Interpolation.simple({\n          divisor: 3\n        }),\n        showLine: true,\n        showPoint: true\n      };\n      this.hoursChartResponsive = [['screen and (max-width: 640px)', {\n        axisX: {\n          labelInterpolationFnc: function (value) {\n            return value[0];\n          }\n        }\n      }]];\n      this.hoursChartLegendItems = [{\n        title: 'Open',\n        imageClass: 'fa fa-circle text-info'\n      }, {\n        title: 'Click',\n        imageClass: 'fa fa-circle text-danger'\n      }, {\n        title: 'Click Second Time',\n        imageClass: 'fa fa-circle text-warning'\n      }];\n      this.viewsChartType = ChartType.Bar;\n      this.viewsChartData = {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n      };\n      this.viewsChartOptions = {\n        seriesBarDistance: 10,\n        classNames: {\n          bar: 'ct-bar ct-azure'\n        },\n        axisX: {\n          showGrid: false\n        }\n      };\n      this.viewsChartResponsive = [['screen and (max-width: 640px)', {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function (value) {\n            return value[0];\n          }\n        }\n      }]];\n      this.activityChartType = ChartType.Bar;\n      this.activityChartData = {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895], [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695]]\n      };\n      this.activityChartOptions = {\n        seriesBarDistance: 10,\n        axisX: {\n          showGrid: false\n        },\n        height: \"245px\"\n      };\n      this.activityChartResponsive = [['screen and (max-width: 640px)', {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function (value) {\n            return value[0];\n          }\n        }\n      }]];\n    }\n    static ɵfac = function ChartsComponent_Factory(t) {\n      return new (t || ChartsComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChartsComponent,\n      selectors: [[\"charts-cmp\"]],\n      decls: 22,\n      vars: 40,\n      consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-6\"], [3, \"title\", \"subtitle\", \"chartType\", \"chartData\", \"chartOptions\", \"withHr\"], [1, \"card\"], [3, \"title\", \"subtitle\", \"chartType\", \"chartData\", \"chartOptions\", \"chartResponsive\", \"legendItems\", \"withHr\"], [3, \"title\", \"subtitle\", \"chartType\", \"chartData\", \"legendItems\", \"withHr\"], [3, \"title\", \"subtitle\", \"chartType\", \"chartData\", \"chartOptions\", \"chartResponsive\", \"withHr\"]],\n      template: function ChartsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵelement(4, \"lbd-chart\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 5);\n          i0.ɵɵelement(7, \"lbd-chart\", 4);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"div\", 3)(10, \"div\", 5);\n          i0.ɵɵelement(11, \"lbd-chart\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 3)(13, \"div\", 5);\n          i0.ɵɵelement(14, \"lbd-chart\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"div\", 2)(16, \"div\", 3)(17, \"div\", 5);\n          i0.ɵɵelement(18, \"lbd-chart\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"div\", 3)(20, \"div\", 5);\n          i0.ɵɵelement(21, \"lbd-chart\", 8);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"title\", \"24 Hours Performance\")(\"subtitle\", \"Line Chart\")(\"chartType\", ctx.dataChartType)(\"chartData\", ctx.dataChartData)(\"chartOptions\", ctx.dataChartOptions)(\"withHr\", false);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"title\", \"NASDAQ: AAPL\")(\"subtitle\", \"Line Chart with Points\")(\"chartType\", ctx.data2ChartType)(\"chartData\", ctx.data2ChartData)(\"chartOptions\", ctx.data2ChartOptions)(\"withHr\", false);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"title\", \"Users Behavior\")(\"subtitle\", \"Multiple Lines Charts\")(\"chartType\", ctx.hoursChartType)(\"chartData\", ctx.hoursChartData)(\"chartOptions\", ctx.hoursChartOptions)(\"chartResponsive\", ctx.hoursChartResponsive)(\"legendItems\", ctx.hoursChartLegendItems)(\"withHr\", false);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"title\", \"Public Preferences\")(\"subtitle\", \"Pie Chart\")(\"chartType\", ctx.emailChartType)(\"chartData\", ctx.emailChartData)(\"legendItems\", ctx.emailChartLegendItems)(\"withHr\", false);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"title\", \"Views\")(\"subtitle\", \"Bar Chart\")(\"chartType\", ctx.viewsChartType)(\"chartData\", ctx.viewsChartData)(\"chartOptions\", ctx.viewsChartOptions)(\"chartResponsive\", ctx.viewsChartResponsive)(\"withHr\", false);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"title\", \"Activity\")(\"subtitle\", \"Multiple Bars Chart\")(\"chartType\", ctx.activityChartType)(\"chartData\", ctx.activityChartData)(\"chartOptions\", ctx.activityChartOptions)(\"chartResponsive\", ctx.activityChartResponsive)(\"withHr\", false);\n        }\n      },\n      dependencies: [i1.LbdChartComponent],\n      encapsulation: 2\n    });\n  }\n  return ChartsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}