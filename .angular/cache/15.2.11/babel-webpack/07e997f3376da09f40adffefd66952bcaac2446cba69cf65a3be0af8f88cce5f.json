{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../equal-validator.directive\";\nexport let ValidationFormsComponent = /*#__PURE__*/(() => {\n  class ValidationFormsComponent {\n    register;\n    login;\n    typeValidation;\n    ngOnInit() {\n      this.register = {\n        email: '',\n        password: '',\n        confirmPassword: ''\n      };\n      this.login = {\n        email: '',\n        password: ''\n      };\n      this.typeValidation = {\n        text: '',\n        email: '',\n        idSource: '',\n        idDestination: '',\n        url: ''\n      };\n    }\n    save(model, isValid) {\n      // call API to save customer\n      if (isValid) {\n        console.log(model, isValid);\n      }\n    }\n    save1(model, isValid) {\n      // call API to save customer\n      if (isValid) {\n        console.log(model, isValid);\n      }\n    }\n    save2(model, isValid) {\n      // call API to save customer\n      if (isValid) {\n        console.log(model, isValid);\n      }\n    }\n    onSubmit(value) {\n      console.log(value);\n    }\n    static ɵfac = function ValidationFormsComponent_Factory(t) {\n      return new (t || ValidationFormsComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ValidationFormsComponent,\n      selectors: [[\"validationforms-cmp\"]],\n      decls: 164,\n      vars: 21,\n      consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"header\"], [1, \"content\"], [1, \"form-group\"], [\"for\", \"\", 1, \"control-label\"], [1, \"star\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"pattern\", \"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\", 1, \"form-control\", 3, \"ngModel\"], [\"email\", \"ngModel\"], [1, \"text-danger\", 3, \"hidden\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"validateEqual\", \"confirmPassword\", \"reverse\", \"true\", 1, \"form-control\", 3, \"ngModel\"], [\"password\", \"ngModel\"], [\"type\", \"password\", \"name\", \"confirmPassword\", \"required\", \"\", \"validateEqual\", \"password\", \"reverse\", \"false\", 1, \"form-control\", 3, \"ngModel\"], [\"confirmPassword\", \"ngModel\"], [1, \"category\"], [1, \"footer\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"btn-fill\", \"pull-right\"], [1, \"form-group\", \"pull-left\"], [1, \"checkbox\"], [\"id\", \"checkbox25\", \"type\", \"checkbox\", 3, \"ngModel\"], [\"for\", \"checkbox25\"], [1, \"clearfix\"], [\"f1\", \"ngForm\"], [1, \"header\", \"text-center\"], [1, \"footer\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"btn-fill\", \"btn-wd\"], [1, \"col-md-12\"], [\"novalidate\", \"\", 1, \"form-horizontal\", 3, \"ngSubmit\"], [\"f2\", \"ngForm\"], [1, \"col-sm-2\", \"control-label\"], [1, \"col-sm-6\"], [\"type\", \"text\", \"name\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\"], [\"text\", \"ngModel\"], [1, \"col-sm-4\"], [\"type\", \"number\", \"name\", \"number\", \"number\", \"true\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\"], [\"number\", \"ngModel\"], [\"type\", \"text\", \"id\", \"url\", \"required\", \"\", \"pattern\", \"https?://.+\", \"name\", \"url\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"url\", \"ngModel\"], [1, \"form-group\", \"column-sizing\"], [1, \"col-sm-3\"], [\"type\", \"text\", \"name\", \"idSource\", \"placeholder\", \"#idSource\", \"required\", \"\", \"validateEqual\", \"idDestination\", \"reverse\", \"true\", 1, \"form-control\", 3, \"ngModel\"], [\"idSource\", \"ngModel\"], [\"type\", \"text\", \"name\", \"idDestination\", \"placeholder\", \"#idDestination\", \"required\", \"\", \"validateEqual\", \"idSource\", \"reverse\", \"false\", 1, \"form-control\", 3, \"ngModel\"], [\"idDestination\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", \"btn-fill\"]],\n      template: function ValidationFormsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r14 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"form\", 5, 6);\n          i0.ɵɵlistener(\"ngSubmit\", function ValidationFormsComponent_Template_form_ngSubmit_5_listener() {\n            i0.ɵɵrestoreView(_r14);\n            const _r0 = i0.ɵɵreference(6);\n            return i0.ɵɵresetView(ctx.save(_r0.value, _r0.valid));\n          });\n          i0.ɵɵelementStart(7, \"div\", 7);\n          i0.ɵɵtext(8, \" Register Form \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 9)(11, \"label\", 10);\n          i0.ɵɵtext(12, \"Email Address: \");\n          i0.ɵɵelementStart(13, \"span\", 11);\n          i0.ɵɵtext(14, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(15, \"input\", 12, 13);\n          i0.ɵɵelementStart(17, \"small\", 14);\n          i0.ɵɵtext(18, \" Email is required and format should be \");\n          i0.ɵɵelementStart(19, \"i\");\n          i0.ɵɵtext(20, \"john@doe.com\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(21, \". \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"div\", 9)(23, \"label\", 10);\n          i0.ɵɵtext(24, \"Password \");\n          i0.ɵɵelementStart(25, \"span\", 11);\n          i0.ɵɵtext(26, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(27, \"input\", 15, 16);\n          i0.ɵɵelementStart(29, \"small\", 14);\n          i0.ɵɵtext(30, \" Password is required \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"div\", 9)(32, \"label\", 10);\n          i0.ɵɵtext(33, \"Confirm Password \");\n          i0.ɵɵelementStart(34, \"span\", 11);\n          i0.ɵɵtext(35, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(36, \"input\", 17, 18);\n          i0.ɵɵelementStart(38, \"small\", 14);\n          i0.ɵɵtext(39, \" Password mismatch \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(40, \"div\", 19)(41, \"span\", 11);\n          i0.ɵɵtext(42, \"*\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(43, \" Required fields\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(44, \"div\", 20)(45, \"button\", 21);\n          i0.ɵɵtext(46, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"div\", 22)(48, \"div\", 23);\n          i0.ɵɵelement(49, \"input\", 24);\n          i0.ɵɵelementStart(50, \"label\", 25);\n          i0.ɵɵtext(51, \" Subscribe to newsletter \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(52, \"div\", 26);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(53, \"div\", 3)(54, \"div\", 4)(55, \"form\", 5, 27);\n          i0.ɵɵlistener(\"ngSubmit\", function ValidationFormsComponent_Template_form_ngSubmit_55_listener() {\n            i0.ɵɵrestoreView(_r14);\n            const _r4 = i0.ɵɵreference(56);\n            return i0.ɵɵresetView(ctx.save1(_r4.value, _r4.valid));\n          });\n          i0.ɵɵelementStart(57, \"div\", 28);\n          i0.ɵɵtext(58, \" Login Form \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(59, \"div\", 8)(60, \"div\", 9)(61, \"label\", 10);\n          i0.ɵɵtext(62, \"Email Address: \");\n          i0.ɵɵelementStart(63, \"span\", 11);\n          i0.ɵɵtext(64, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(65, \"input\", 12, 13);\n          i0.ɵɵelementStart(67, \"small\", 14);\n          i0.ɵɵtext(68, \" Email is required and format should be \");\n          i0.ɵɵelementStart(69, \"i\");\n          i0.ɵɵtext(70, \"john@doe.com\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(71, \". \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(72, \"div\", 9)(73, \"label\", 10);\n          i0.ɵɵtext(74, \"Password \");\n          i0.ɵɵelementStart(75, \"span\", 11);\n          i0.ɵɵtext(76, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(77, \"input\", 15, 16);\n          i0.ɵɵelementStart(79, \"small\", 14);\n          i0.ɵɵtext(80, \" Password is required \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(81, \"div\", 19)(82, \"span\", 11);\n          i0.ɵɵtext(83, \"*\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(84, \" Required fields\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(85, \"div\", 29)(86, \"button\", 30);\n          i0.ɵɵtext(87, \"Login\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(88, \"div\", 31)(89, \"div\", 4)(90, \"form\", 32, 33);\n          i0.ɵɵlistener(\"ngSubmit\", function ValidationFormsComponent_Template_form_ngSubmit_90_listener() {\n            i0.ɵɵrestoreView(_r14);\n            const _r7 = i0.ɵɵreference(91);\n            return i0.ɵɵresetView(ctx.save2(_r7.value, _r7.valid));\n          });\n          i0.ɵɵelementStart(92, \"div\", 8)(93, \"legend\");\n          i0.ɵɵtext(94, \"Type Validation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(95, \"fieldset\")(96, \"div\", 9)(97, \"label\", 34);\n          i0.ɵɵtext(98, \" Required Text \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(99, \"div\", 35);\n          i0.ɵɵelement(100, \"input\", 36, 37);\n          i0.ɵɵelementStart(102, \"small\", 14);\n          i0.ɵɵtext(103, \" Text is required. \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(104, \"div\", 38)(105, \"code\");\n          i0.ɵɵtext(106, \"required\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(107, \"fieldset\")(108, \"div\", 9)(109, \"label\", 34);\n          i0.ɵɵtext(110, \" Email \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(111, \"div\", 35);\n          i0.ɵɵelement(112, \"input\", 12, 13);\n          i0.ɵɵelementStart(114, \"small\", 14);\n          i0.ɵɵtext(115, \" Email is required and format should be \");\n          i0.ɵɵelementStart(116, \"i\");\n          i0.ɵɵtext(117, \"john@doe.com\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(118, \". \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(119, \"div\", 38)(120, \"code\");\n          i0.ɵɵtext(121, \"email=\\\"true\\\"\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(122, \"fieldset\")(123, \"div\", 9)(124, \"label\", 34);\n          i0.ɵɵtext(125, \" Number \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(126, \"div\", 35);\n          i0.ɵɵelement(127, \"input\", 39, 40);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(129, \"div\", 38)(130, \"code\");\n          i0.ɵɵtext(131, \"number=\\\"true\\\"\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(132, \"fieldset\")(133, \"div\", 9)(134, \"label\", 34);\n          i0.ɵɵtext(135, \" Url \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(136, \"div\", 35)(137, \"input\", 41, 42);\n          i0.ɵɵlistener(\"ngModelChange\", function ValidationFormsComponent_Template_input_ngModelChange_137_listener($event) {\n            return ctx.typeValidation.url = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(139, \"small\", 14);\n          i0.ɵɵtext(140, \" Must be a valid URL! \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(141, \"div\", 38)(142, \"code\");\n          i0.ɵɵtext(143, \"url=\\\"true\\\"\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(144, \"fieldset\")(145, \"div\", 43)(146, \"label\", 34);\n          i0.ɵɵtext(147, \" Equal to \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(148, \"div\", 44);\n          i0.ɵɵelement(149, \"input\", 45, 46);\n          i0.ɵɵelementStart(151, \"small\", 14);\n          i0.ɵɵtext(152, \" IdSource is required \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(153, \"div\", 44);\n          i0.ɵɵelement(154, \"input\", 47, 48);\n          i0.ɵɵelementStart(156, \"small\", 14);\n          i0.ɵɵtext(157, \" IdSource mismatch! \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(158, \"div\", 38)(159, \"code\");\n          i0.ɵɵtext(160, \"equalTo=\\\"#idSource\\\"\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(161, \"div\", 29)(162, \"button\", 49);\n          i0.ɵɵtext(163, \"Validate Inputs\");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(6);\n          const _r1 = i0.ɵɵreference(16);\n          const _r2 = i0.ɵɵreference(28);\n          const _r3 = i0.ɵɵreference(37);\n          const _r4 = i0.ɵɵreference(56);\n          const _r7 = i0.ɵɵreference(91);\n          const _r8 = i0.ɵɵreference(101);\n          const _r11 = i0.ɵɵreference(138);\n          const _r12 = i0.ɵɵreference(150);\n          const _r13 = i0.ɵɵreference(155);\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngModel\", ctx.register.email);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", _r1.valid || _r1.pristine && !_r0.submitted);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.register.password);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", _r2.valid || _r2.pristine && !_r0.submitted);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.register.confirmPassword);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", _r3.valid || _r3.pristine && !_r0.submitted);\n          i0.ɵɵadvance(27);\n          i0.ɵɵproperty(\"ngModel\", ctx.login.email);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", _r1.valid || _r1.pristine && !_r4.submitted);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.login.password);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", _r2.valid || _r2.pristine && !_r4.submitted);\n          i0.ɵɵadvance(21);\n          i0.ɵɵproperty(\"ngModel\", ctx.typeValidation.text);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", _r8.valid || _r8.pristine && !_r7.submitted);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.typeValidation.email);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", _r1.valid || _r1.pristine && !_r7.submitted);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngModel\", ctx.typeValidation.number);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.typeValidation.url);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", _r11.valid || _r11.pristine && !_r7.submitted);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.typeValidation.idSource);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", _r12.valid || _r12.pristine && !_r7.submitted);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.typeValidation.idDestination);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", _r13.valid || _r13.pristine && !_r7.submitted);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.PatternValidator, i1.NgModel, i1.NgForm, i2.EqualValidator],\n      encapsulation: 2\n    });\n  }\n  return ValidationFormsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}